{
  "name": "sgu-microservices",
  "version": "1.0.0",
  "description": "Sistema de Gestión Universitaria - Microservicios con Patrones de Diseño",
  "main": "index.js",
  "scripts": {
    "test": "npm run test:all",
    "test:all": "npm run test:services && npm run test:patterns",
    "test:parallel": "npm run test:services:parallel",
    "test:services": "npm run test:auth && npm run test:courses && npm run test:enrollment && npm run test:notifications && npm run test:payments && npm run test:gateway",
    "test:services:parallel": "concurrently --prefix-colors \"cyan,magenta,green,yellow,blue,red\" --names \"auth,courses,enrollment,notifications,payments,gateway\" \"npm run test:auth\" \"npm run test:courses\" \"npm run test:enrollment\" \"npm run test:notifications\" \"npm run test:payments\" \"npm run test:gateway\"",
    "test:fast": "npm run test:services:fast:parallel",
    "test:services:fast:parallel": "concurrently --prefix-colors \"cyan,magenta,green,yellow,blue,red\" --names \"auth,courses,enrollment,notifications,payments,gateway\" \"cd auth-service && npm run test:fast\" \"cd courses-service && npm run test:fast\" \"cd enrollment-service && npm run test:fast\" \"cd notifications-service && npm run test:fast\" \"cd payments-service && npm run test:fast\" \"cd api-gateway && npm run test:fast\"",
    "test:patterns": "npm run test:ddd && npm run test:factory && npm run test:strategy && npm run test:decorator",
    "test:auth": "cd auth-service && npm test",
    "test:courses": "cd courses-service && npm test",
    "test:enrollment": "cd enrollment-service && npm test",
    "test:notifications": "cd notifications-service && npm test",
    "test:payments": "cd payments-service && npm test",
    "test:gateway": "cd api-gateway && npm test",
    "test:ddd": "cd enrollment-service && npm test -- tests/domain/",
    "test:factory": "npm run test:factory:notifications && npm run test:factory:payments && npm run test:factory:validators",
    "test:factory:notifications": "cd notifications-service && npm test -- tests/factories/",
    "test:factory:payments": "cd payments-service && npm test -- tests/factories/",
    "test:factory:validators": "cd enrollment-service && npm test -- tests/factories/",
    "test:strategy": "cd enrollment-service && npm test -- tests/strategies/ && npm test -- tests/services/",
    "test:decorator": "cd api-gateway && npm test -- tests/decorators/",
    "test:integration": "npm run test:integration:setup && npm run test:integration:run && npm run test:integration:cleanup",
    "test:integration:setup": "docker-compose -f docker-compose.test.yml up -d",
    "test:integration:run": "npm run test:integration:services",
    "test:integration:services": "npm run test:integration:auth && npm run test:integration:enrollment",
    "test:integration:auth": "cd auth-service && npm run test:integration",
    "test:integration:enrollment": "cd enrollment-service && npm run test:integration",
    "test:integration:cleanup": "docker-compose -f docker-compose.test.yml down -v",
    "test:coverage": "npm run test:coverage:services && npm run test:coverage:patterns",
    "test:coverage:services": "npm run test:coverage:auth && npm run test:coverage:courses && npm run test:coverage:enrollment && npm run test:coverage:notifications && npm run test:coverage:payments && npm run test:coverage:gateway",
    "test:coverage:patterns": "npm run test:coverage:ddd && npm run test:coverage:factory && npm run test:coverage:strategy && npm run test:coverage:decorator",
    "test:coverage:auth": "cd auth-service && npm run test:coverage",
    "test:coverage:courses": "cd courses-service && npm run test:coverage",
    "test:coverage:enrollment": "cd enrollment-service && npm run test:coverage",
    "test:coverage:notifications": "cd notifications-service && npm run test:coverage",
    "test:coverage:payments": "cd payments-service && npm run test:coverage",
    "test:coverage:gateway": "cd api-gateway && npm run test:coverage",
    "test:coverage:ddd": "cd enrollment-service && npm run test:coverage -- tests/domain/",
    "test:coverage:factory": "npm run test:coverage:factory:notifications && npm run test:coverage:factory:payments && npm run test:coverage:factory:validators",
    "test:coverage:factory:notifications": "cd notifications-service && npm run test:coverage -- tests/factories/",
    "test:coverage:factory:payments": "cd payments-service && npm run test:coverage -- tests/factories/",
    "test:coverage:factory:validators": "cd enrollment-service && npm run test:coverage -- tests/factories/",
    "test:coverage:strategy": "cd enrollment-service && npm run test:coverage -- tests/strategies/ && npm run test:coverage -- tests/services/",
    "test:coverage:decorator": "cd api-gateway && npm run test:coverage -- tests/decorators/",
    "lint": "npm run lint:all",
    "lint:all": "npm run lint:auth && npm run lint:courses && npm run lint:enrollment && npm run lint:notifications && npm run lint:payments && npm run lint:gateway",
    "lint:auth": "cd auth-service && npm run lint",
    "lint:courses": "cd courses-service && npm run lint",
    "lint:enrollment": "cd enrollment-service && npm run lint",
    "lint:notifications": "cd notifications-service && npm run lint",
    "lint:payments": "cd payments-service && npm run lint",
    "lint:gateway": "cd api-gateway && npm run lint",
    "lint:fix": "npm run lint:fix:auth && npm run lint:fix:courses && npm run lint:fix:enrollment && npm run lint:fix:notifications && npm run lint:fix:payments && npm run lint:fix:gateway",
    "lint:fix:auth": "cd auth-service && npm run lint:fix",
    "lint:fix:courses": "cd courses-service && npm run lint:fix",
    "lint:fix:enrollment": "cd enrollment-service && npm run lint:fix",
    "lint:fix:notifications": "cd notifications-service && npm run lint:fix",
    "lint:fix:payments": "cd payments-service && npm run lint:fix",
    "lint:fix:gateway": "cd api-gateway && npm run lint:fix",
    "format": "npm run format:check",
    "format:check": "npm run format:check:auth && npm run format:check:courses && npm run format:check:enrollment && npm run format:check:notifications && npm run format:check:payments && npm run format:check:gateway",
    "format:check:auth": "cd auth-service && npm run format:check",
    "format:check:courses": "cd courses-service && npm run format:check",
    "format:check:enrollment": "cd enrollment-service && npm run format:check",
    "format:check:notifications": "cd notifications-service && npm run format:check",
    "format:check:payments": "cd payments-service && npm run format:check",
    "format:check:gateway": "cd api-gateway && npm run format:check",
    "format:write": "npm run format:write:auth && npm run format:write:courses && npm run format:write:enrollment && npm run format:write:notifications && npm run format:write:payments && npm run format:write:gateway",
    "format:write:auth": "cd auth-service && npm run format:write",
    "format:write:courses": "cd courses-service && npm run format:write",
    "format:write:enrollment": "cd enrollment-service && npm run format:write",
    "format:write:notifications": "cd notifications-service && npm run format:write",
    "format:write:payments": "cd payments-service && npm run format:write",
    "format:write:gateway": "cd api-gateway && npm run format:write",
    "install:all": "npm run install:auth && npm run install:courses && npm run install:enrollment && npm run install:notifications && npm run install:payments && npm run install:gateway",
    "install:auth": "cd auth-service && npm install",
    "install:courses": "cd courses-service && npm install",
    "install:enrollment": "cd enrollment-service && npm install",
    "install:notifications": "cd notifications-service && npm install",
    "install:payments": "cd payments-service && npm install",
    "install:gateway": "cd api-gateway && npm install",
    "build": "npm run build:all",
    "build:all": "npm run build:auth && npm run build:courses && npm run build:enrollment && npm run build:notifications && npm run build:payments && npm run build:gateway",
    "build:auth": "cd auth-service && npm run build",
    "build:courses": "cd courses-service && npm run build",
    "build:enrollment": "cd enrollment-service && npm run build",
    "build:notifications": "cd notifications-service && npm run build",
    "build:payments": "cd payments-service && npm run build",
    "build:gateway": "cd api-gateway && npm run build",
    "start": "npm run start:all",
    "start:all": "npm run start:auth && npm run start:courses && npm run start:enrollment && npm run start:notifications && npm run start:payments && npm run start:gateway",
    "start:auth": "cd auth-service && npm start",
    "start:courses": "cd courses-service && npm start",
    "start:enrollment": "cd enrollment-service && npm start",
    "start:notifications": "cd notifications-service && npm start",
    "start:payments": "cd payments-service && npm start",
    "start:gateway": "cd api-gateway && npm start",
    "dev": "npm run dev:all",
    "dev:all": "npm run dev:auth && npm run dev:courses && npm run dev:enrollment && npm run dev:notifications && npm run dev:payments && npm run dev:gateway",
    "dev:auth": "cd auth-service && npm run dev",
    "dev:courses": "cd courses-service && npm run dev",
    "dev:enrollment": "cd enrollment-service && npm run dev",
    "dev:notifications": "cd notifications-service && npm run dev",
    "dev:payments": "cd payments-service && npm run dev",
    "dev:gateway": "cd api-gateway && npm run dev",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:test": "docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit",
    "ci:test": "npm run test:all",
    "ci:lint": "npm run lint:all",
    "ci:coverage": "npm run test:coverage",
    "ci:build": "npm run build:all",
    "ci:install": "npm run install:all",
    "patterns:test": "npm run test:patterns",
    "patterns:coverage": "npm run test:coverage:patterns",
    "patterns:report": "npm run patterns:coverage && npm run patterns:summary",
    "patterns:summary": "echo '📊 Design Patterns Implementation Summary' && echo '============================================' && echo '✅ Domain-Driven Design (DDD): Implemented' && echo '✅ Factory Method: Implemented' && echo '✅ Strategy: Implemented' && echo '✅ Decorator: Implemented' && echo '🎉 All patterns working together successfully!'"
  },
  "keywords": [
    "sgu",
    "microservices",
    "design-patterns",
    "ddd",
    "factory-method",
    "strategy",
    "decorator",
    "university",
    "management",
    "nodejs",
    "express"
  ],
  "author": "SGU Development Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^9.2.1",
    "eslint": "^8.57.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.0.0",
    "prettier": "^3.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/depOscar1zero/sgu-microservice.git"
  },
  "bugs": {
    "url": "https://github.com/depOscar1zero/sgu-microservice/issues"
  },
  "homepage": "https://github.com/depOscar1zero/sgu-microservice#readme"
}
